{"remainingRequest":"D:\\VueProject\\vue-blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VueProject\\vue-blog\\src\\views\\Blogs.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\VueProject\\vue-blog\\src\\views\\Blogs.vue","mtime":1594796014629},{"path":"D:\\VueProject\\vue-blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1594728263697},{"path":"D:\\VueProject\\vue-blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1594728264529},{"path":"D:\\VueProject\\vue-blog\\node_modules\\postcss-loader\\src\\index.js","mtime":1581073321066},{"path":"D:\\VueProject\\vue-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581073318861},{"path":"D:\\VueProject\\vue-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1594728264529}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmVsLWhlYWRlciwgLmVsLWZvb3RlciB7CiAgbWFyZ2luLXRvcDogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjQjNDMEQxOwogIGNvbG9yOiAjMzMzOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBsaW5lLWhlaWdodDogNjBweDsKfQoKLmVsLWFzaWRlIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjRDNEQ0U2OwogIGNvbG9yOiAjMzMzOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBsaW5lLWhlaWdodDogMjAwcHg7Cn0KCi5lbC1tYWluIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBjb2xvcjogIzMzMzsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgbGluZS1oZWlnaHQ6IDE2MHB4Owp9Cgpib2R5ID4gLmVsLWNvbnRhaW5lciB7CiAgbWFyZ2luLWJvdHRvbTogNDBweDsKfQoKLmxvZ28gewogIGhlaWdodDogNTBweDsKICB3aWR0aDogNTBweDsKICBtYXJnaW4tdG9wOiA1cHg7Cn0KCi5kZW1vLXJ1bGVGb3JtIHsKICBtYXgtd2lkdGg6IDUwMHB4OwogIG1hcmdpbjogMCBhdXRvOwp9Cg=="},{"version":3,"sources":["Blogs.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Blogs.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <el-container>\r\n      <el-header>\r\n        <img class=\"logo\" src=\"../../static/img/gaygay.jpg\" height=\"272\" width=\"244\"/></el-header>\r\n      <el-main>\r\n        <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n\r\n          <el-form-item label=\"用户名\" prop=\"username\">\r\n            <el-input type=\"text\" v-model=\"ruleForm.username\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\">\r\n            <el-input type=\"password\" v-model=\"ruleForm.password\"></el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">登录</el-button>\r\n            <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n          </el-form-item>\r\n\r\n        </el-form>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        name: \"Blogs.vue\",\r\n        data() {\r\n            return {\r\n                ruleForm: {\r\n                    username: '',\r\n                    password: '',\r\n                },\r\n                rules: {\r\n                    username: [\r\n                        { required: true, message: '请输入用户名', trigger: 'blur' },\r\n                    ],\r\n                    password: [\r\n                        { required: true, message: '请输入密码', trigger: 'blur' }\r\n                    ],\r\n                }\r\n            };\r\n        },\r\n        methods: {\r\n            submitForm(formName) {\r\n                this.$refs[formName].validate((valid) => {\r\n                    if (valid) {\r\n                        const _this = this;\r\n                        alert('submit!');\r\n                        this.$axios.post('http://localhost:8081/login', this.ruleForm).then(res =>{\r\n                            console.log(res.headers);\r\n                            console.log(res);\r\n                            const jwt = res.headers['authorization'];\r\n                            const userInfo = res.data.data;\r\n\r\n                            _this.$store.commit(\"SET_TOKEN\", jwt)\r\n                            _this.$store.commit(\"SET_USERINFO\", userInfo)\r\n\r\n                            console.log(_this.$store.getters.getUser)\r\n\r\n                            _this.$router.push()\r\n                        })\r\n                    } else {\r\n                        console.log('error submit!!');\r\n                        return false;\r\n                    }\r\n                });\r\n            },\r\n            resetForm(formName) {\r\n                this.$refs[formName].resetFields();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n  .el-header, .el-footer {\r\n    margin-top: 10px;\r\n    background-color: #B3C0D1;\r\n    color: #333;\r\n    text-align: center;\r\n    line-height: 60px;\r\n  }\r\n\r\n  .el-aside {\r\n    background-color: #D3DCE6;\r\n    color: #333;\r\n    text-align: center;\r\n    line-height: 200px;\r\n  }\r\n\r\n  .el-main {\r\n    background-color: white;\r\n    color: #333;\r\n    text-align: center;\r\n    line-height: 160px;\r\n  }\r\n\r\n  body > .el-container {\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  .logo {\r\n    height: 50px;\r\n    width: 50px;\r\n    margin-top: 5px;\r\n  }\r\n\r\n  .demo-ruleForm {\r\n    max-width: 500px;\r\n    margin: 0 auto;\r\n  }\r\n</style>\r\n"]}]}