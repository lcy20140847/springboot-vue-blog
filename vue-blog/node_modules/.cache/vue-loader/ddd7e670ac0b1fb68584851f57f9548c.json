{"remainingRequest":"D:\\VueProject\\vue-blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\VueProject\\vue-blog\\src\\views\\BlogEdit.vue?vue&type=style&index=0&id=25b085f4&scoped=true&lang=css&","dependencies":[{"path":"D:\\VueProject\\vue-blog\\src\\views\\BlogEdit.vue","mtime":1594905040221},{"path":"D:\\VueProject\\vue-blog\\node_modules\\css-loader\\dist\\cjs.js","mtime":1594728263697},{"path":"D:\\VueProject\\vue-blog\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1594728264529},{"path":"D:\\VueProject\\vue-blog\\node_modules\\postcss-loader\\src\\index.js","mtime":1581073321066},{"path":"D:\\VueProject\\vue-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1581073318861},{"path":"D:\\VueProject\\vue-blog\\node_modules\\vue-loader\\lib\\index.js","mtime":1594728264529}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kZW1vLXJ1bGVGb3JtewogIG1hcmdpbjogMjBweCBhdXRvOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBtYXgtd2lkdGg6IDgwJTsKfQo="},{"version":3,"sources":["BlogEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2FA;AACA;AACA;AACA;AACA","file":"BlogEdit.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div>\r\n    <Header></Header>\r\n    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n      <el-form-item  label=\"标题\" prop=\"title\">\r\n        <el-input v-model=\"ruleForm.title\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"摘要\" prop=\"description\">\r\n        <el-input type=\"textarea\" v-model=\"ruleForm.description\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"内容\" prop=\"description\">\r\n        <mavon-editor v-model=\"ruleForm.content\"></mavon-editor>\r\n      </el-form-item>\r\n      <el-form-item>\r\n        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\r\n        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n      </el-form-item>\r\n    </el-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n    import Header from \"../components/Header\";\r\n    export default {\r\n      name: \"BlogEdit.vue\",\r\n      components: {Header},\r\n      data() {\r\n        return {\r\n          ruleForm: {\r\n            title: '',\r\n            description: '',\r\n            content: '',\r\n          },\r\n          rules: {\r\n            title: [\r\n              { required: true, message: '请输入标题', trigger: 'blur' },\r\n              { min: 2, max: 25, message: '长度在 2 到 25 个字符', trigger: 'blur' }\r\n            ],\r\n            description: [\r\n              { required: true, message: '请输入摘要', trigger: 'blur' }\r\n            ],\r\n            content: [\r\n              { required: true, message: '请输入博客内容', trigger: 'blur' }\r\n            ],\r\n          }\r\n        };\r\n      },\r\n      methods: {\r\n        submitForm(formName) {\r\n          this.$refs[formName].validate((valid) => {\r\n            if (valid) {\r\n              const _this = this;\r\n              this.$axios.post(\"/blog/edit\", this.ruleForm, {\r\n                headers: {\r\n                  \"Authorization\": localStorage.getItem(\"token\")\r\n                }\r\n              }).then(res => {\r\n                this.$message({\r\n                  message: '成功创建博客',\r\n                  type: 'success'\r\n                });\r\n                _this.$router.push('/blogs')\r\n              })\r\n            } else {\r\n              console.log('error submit!!');\r\n              return false;\r\n            }\r\n          });\r\n        },\r\n        resetForm(formName) {\r\n          this.$refs[formName].resetFields();\r\n        },\r\n      },\r\n      created() {\r\n        const  blogId = this.$route.params.blogId;\r\n        if (blogId) {\r\n          const _this = this;\r\n          this.$axios.get('/blog/' + blogId).then(res => {\r\n            const blog = res.data.data;\r\n            _this.ruleForm.id = blog.id;\r\n            _this.ruleForm.title= blog.title;\r\n            _this.ruleForm.description = blog.description;\r\n            _this.ruleForm.content = blog.content;\r\n\r\n          })\r\n        }\r\n      }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n  .demo-ruleForm{\r\n    margin: 20px auto;\r\n    text-align: center;\r\n    max-width: 80%;\r\n  }\r\n</style>\r\n"]}]}